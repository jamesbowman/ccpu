include(ga144.hdr)

include(708out.hdr)

PLOUGH(`WIRE', 605, NORTH, EAST, EAST, EAST, NORTH)

---------------------------- 705 ----------------------------
\ See block 1428 for ROM definitions
\ For usage notes:
\   https://mschuldt.github.io/www.colorforth.com/flash.htm
\   http://ww1.microchip.com/downloads/en/DeviceDoc/25024C.pdf
\ EVB001 note: check jumpers J20 and J26

define(_select,   `0xcc')   \ dw-dw
define(_8o,       `0xc2')   \ dw-dw'
define(_18ibits,  `0xd9')   \ d-dw
define(_ibits,    `0xdb')   \ 

define(ljust, `eval(`$1 << 10')')
    @p a!
      WEST
    @p @p                     \ d (delay), always on stack
      0x947
      0
: again
    @p call 2cmd
      eval(`0x5001 << 2')     \ EWSR Enable-Write-Status_Register
    @p call 8!
      0

    @p call 2cmd
      eval(`0x0620 << 2')     \ Sector-Erase
    @ dup push
    call addr

    call busy

    @p call 2cmd
      eval(`0x06ad << 2')     \ Auto-Address-Increment-Programming

    pop call addr

    @ call 16!

    @p push
      70 \ 2046
: wrloop
    call _select
    @p push
      12173                   \ 28 us
    unext
    @p call 8!
      eval(`0xad << 10') 
    @ call 16!
    next wrloop

    @p call cmd
      eval(`0x04 << 10')      \ WRDI
      
    call busy

    @p a!
      SOUTH
: halt
    ! jump halt

: busy
    @p call cmd
      eval(`0x05 << 10')      \ RDSR Read-Status-Register
    call 8i
    dup 2/ 2*
    or if drop;
    drop jump busy

: addr     \ dn-d
    call _8o
    call _8o
    jump 8!

: 2cmd  \ dn-d
    call _select
    call _8o
: cmd   \ dn-d
    call _select
: 8!    \ dn-d
    call _8o
: drop;
    drop ;

: 16!   \ dn-d
    dup push
    @p push                   \ left-justify low byte
      9
    2* unext
    call 8!
    pop 2* 2*                 \ left-justify high byte
    jump 8!
      
: 8i   \ d-dw
    dup @p push
      7
    jump _ibits
: 16i   \ d-dw
    dup @p push
      15
    jump _ibits

define(PLAYBACK, `
\ Send contents to $2, then carry $1 to $2
\ attr: render playback $1 $2
    @p @p @p @p
      $1
      $2
      3
      60
    push a! b!
: main
    @+ !b unext
    a!
: wire
    @ !b jump wire
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
    0
')

PLOUGH(`PLAYBACK', 004, EAST,
  NORTH, NORTH, NORTH, NORTH, NORTH, NORTH, WEST, SOUTH, SOUTH, SOUTH, SOUTH, SOUTH, SOUTH, WEST,
  NORTH, NORTH, NORTH, NORTH, NORTH, NORTH, WEST, SOUTH, SOUTH, SOUTH, SOUTH, SOUTH, SOUTH, WEST,
  NORTH, NORTH, NORTH, NORTH, NORTH, NORTH, NORTH,
  EAST, EAST, EAST, EAST, EAST)
