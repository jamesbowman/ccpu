---------------------------- 507 ----------------------------
  @p a!
    EAST
: main
  @ dup @p 
    WEST
  b! !b dup @p 
    NORTH
  b! !b dup @p 
    SOUTH
  b! !b @p @p
    3
    NORTH_SOUTH_WEST
  b! push

  @b ! unext
 jump main

define(`searchnode', `
\ fetch instruction from b
\ search table
\   send 4 words if match
\ do nothing if not found
: searcher
  @b @p a!
    table
: checkloop
  dup @+ if searcher
  and @+ or
  if match
  drop a @p +
    4
  a! jump checkloop
: match
  @p push
    3
  @+ !b unext
  jump searcher

: table

')

---------------------------- 506 ----------------------------
  @p b!
    EAST
searchnode()

  0177700   \ CLR
  0005000
    call ea@
    dup or
    .
    jump ram!

  0177700   \ COM
  0005100
    call ea@
    -
    .
    jump ram!

  0177700   \ INC
  0005200
    call ea@
    @p . +
      1
    jump ram!

  0177700   \ DEC
  0005300
    call ea@
    @p . +
      -1
    jump ram!

  0177700   \ NEG
  0005400
    call ea@
    - @p . +
      1
    jump ram!

  0177700   \ ADC
  0005500
    call ea@
    over call bit16
    . +
    jump ram!

  0177700   \ SBC - XXX needs more thought
  0005600
    call ea@
    over call bit16
    . +
    jump ram!

  0177700   \ MFPI - used as 'EMIT' for debug
  0006500
    call ea@
    a push @p
      ---u
    a! jump _emit

\ 0177777   \ BPT - dump top of stack
\ 0000003
\   drop
\   a push @p
\     ---u
\   a! jump _emit

  0

---------------------------- 407 ----------------------------
  @p b!
    NORTH
searchnode()

  0170000   \ MOV
  0010000
    call ssdd
    drop
    .
    jump ram!

  0170000   \ CMP
  0020000
    call ssdd
    .
    .
    ;

  0170000   \ ADD
  0060000
    call ssdd
    . +
    .
    jump ram!

  0170000   \ SUB
  0160000
    call ssdd
    - . + 
    -
    jump ram!

  0177700   \ ASR
  0006200
    call ea@
    2* 2* 2/
    2/ 2/
    jump ram!

  0177700   \ ASL
  0006300
    call ea@
    2*
    .
    jump ram!

  0

---------------------------- 607 ----------------------------
  @p b!
    SOUTH
searchnode()

  0x30000   \ 'pseudo' instruction, used for a taken branch
  0x30000
    - call branch8
    @p call ram@
      14
    + jump ram!

  0xff00    \ BNE
  001000
    push over over
    or 
    .
    jump conditional

  0xff00    \ BR
  000400
    call branch8
    @p call ram@
      14
    + jump ram!

  0xff00    \ BEQ
  001400
    push over over
    or 
    .
    jump rconditional

  0177700   \ JMP
  0000100
    call ea
    @p call ram@
      14
    drop jump ram!

  0177700   \ JSR
  0004700
    call ea_pushpc
    @p call ram@
      14
    drop jump ram!

  0177777   \ RTS
  0000207
    .
    .
    @p jump execute
      012607            \ opcode MOV (SP)+,R7
      
  0
