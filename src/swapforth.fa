define(GO, `
  @p call `GO'
    $1
')
define(TRACE, `
  a @p @p
    $1
    EAST
  a! ! a!
')

CODE _true
  call -!
  @p
    -1
  call DORETURN

CODE _emit
  a over @p
    EAST
  a! ! a!
  @+ call DORETURN

CODE _+
  @+ . +                \ +
  call DORETURN

CODE _drop
  @+ call DORETURN

CODE _dup
  dup call -!
  call DORETURN

CODE _over
  @ over
  call -!
  call DORETURN

CODE one
  a!
  TRACE(11111)
  jump 0
: cold
  a push
  @p a! !
    EAST
  pop a!
  @+
  jump cold

CODE two
    a! jump 0
: cold
  \ TRACE(22222)
  GO(one)
  jump NORTH

CODE three.2
  GO(two)

CODE three.1
  @p call TO_R
    three.2
  GO(_emit)

CODE three
  \ TRACE(33333)
  \ @p . +                \ 1+
  \   1
  \ push @ pop            \ SWAP
  \ !
  @p call TO_R
    three.1
  GO(_emit)

CODE zero.1
  @p call LIT           \ 303
    303
  GO(three)

:: _klak
  100 200 300 400 500 + ;

CODE boot
  @p
    101                 \ 101
  dup call -!           \ DUP
  dup call -!           \ DUP
  @p call TO_R
    zero.1
  GO(_klak)
