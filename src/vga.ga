include(ga144.hdr)

include(708out.hdr)

\ relevant output pins:

\ GND     J27.1
\ 709.ao  J27.2
\ 713.ao  J27.5     blue
\ 717.ao  J27.7     red

\ 617.ao  J21.1     green
\             2
\ 517.17  J21.3     
\ 417.17  J21.4     HSYNC (yellow)
\ 317.17  J21.5     VSYNC (red)
\ 117.ao  J21.7

define(WIRE_64DIV, `
    @p a! @p
        $1
        $2
    b!
: again
    @ 2/ 2/
    2/ 2/ 2/
    2/ !b jump again')

define(DAC, `
      @p a!
        $1
      @p b!
        io
      @p
        0x155
: again
      @ 2* 2*
      2* over or
      !b jump again')

---------------------------- 608 ----------------------------
    @p a! @p @p
        NORTH
        1
        1
    over over . +
: cold
    dup !
: again
    jump again

---------------------------- 717 ----------------------------
DAC(WEST)

---------------------------- 617 ----------------------------
DAC(SOUTH)

---------------------------- 713 ----------------------------
DAC(EAST)

---------------------------- 714 ----------------------------
WIRE(EAST, WEST)

---------------------------- 715 ----------------------------
WIRE_64DIV(EAST, WEST)

---------------------------- 517 ----------------------------
WIRE(SOUTH, NORTH_WEST)

---------------------------- 516 ----------------------------
WIRE(EAST, NORTH)

---------------------------- 616 ----------------------------
WIRE_64DIV(SOUTH, NORTH)

---------------------------- 716 ----------------------------
WIRE(SOUTH, EAST_WEST)

---------------------------- 417 ----------------------------

\ http://tinyvga.com/vga-timing/640x480@60Hz

: again
    @p call vsync   \ sync
      0x20000
    @p call  lines
      2-1
    @p call vsync
      0x30000
    @p call  lines  \ back porch
      33-1
    @p call  lines  \ frame
      480-1
    @p call  lines  \ front porch
      10-1
    jump again
: lines
    push
: lineloop
    @p a!
      NORTH
    @p b! @p @p
      io
      0x20000
      0x30000

    over !b                 \ vsync low
    @p call delay
      int(3.8133/.00248)    \ sync pulse
    dup !b                  \ vsync high

    @p call delay
      int((1.906)/.00248)   \ back porch

\   @p call delay
\     int((25.422)/.00248)

    @p a!
      WEST
    @p b!
      NORTH
    @p push
      640-1
: display
      . . @ .
      . . !b .
      . . . .
      . next display
    dup or !b

    @p call delay
      int(0.6355/.00248)    \ front porch

\    dup !b    \ high
\    @p call delay
\      int(27.96/.00248)
\    over !b    \ low
\    @p call delay
\      int(3.8133/.00248)

    next lineloop
    ;
: delay
    push
    unext ;

: vsync
    @p a! ! ;
      SOUTH
---------------------------- 317 ----------------------------
WIRE(NORTH, io)

---------------------------- 416 ----------------------------

\ Like a wire node from WEST to EAST, but inserts zero pixels
\ for the non-visible lines

    @p a!
      WEST
    @p b!
      EAST

: screen
    @p call zeroes
      640*35-1

    \ 640*480 does not fit in 18 bits, so do it twice
    @p dup
      (640*480)/2-1
    push push
    @ !b unext
    @ !b unext

    @p call zeroes
      640*10-1
    jump screen

: zeroes ( n -- ) \ send n zeroes to b
    push
    dup dup or
    dup !b unext ;

---------------------------- 415 ----------------------------
    @p b!
      EAST
: again
    @p a! @
      NORTH
    !b
    @p a! @
      SOUTH
    !b
    jump again

define(GREEN, `
    @p
      63
')

define(RAMPS, `
    call x
')

define(BODY, RAMPS)

define(PIXEL_GEN, `
---------------------------- $1 ----------------------------
    @p b!
      $2
: again
    BODY
    call bump
    !b jump again
: bump
    call x
    @p . +
      2
    @p drop !p ;
: x
    @p ;
      $3
')

PIXEL_GEN(515, SOUTH, 0)
PIXEL_GEN(315, NORTH, 1)
